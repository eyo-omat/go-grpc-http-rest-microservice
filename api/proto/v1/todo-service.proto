syntax = "proto3";
package v1;

import "google/protobuf/timestamp.proto";

/**
 * tasks we will be doing
 */
message ToDo {
    // Unique identifier of task
    int64 id = 1;
    // Title of the task
    string title = 2;
    // Detailed description of task
    string description = 3;
    // Date and time of reminder for task
    google.protobuf.Timestamp reminder = 4;
}

/**
 * Request data to create a new task
 */
message CreateRequest {
    // API versioning, specify version explicitly
    string api = 1;

    // Task entity to add
    ToDo toDo = 2;
 }

 /**
  * Response for the created task
  */
message CreateResponse {
    // API versioning, specify version explicitly
    string api = 1;

    // ID of the created task
    int64 id = 2;
}

/**
 * Request data to read a task
 */
message ReadRequest {
    // API versioning, specify version explicitly
    string api = 1;

    // Unique identifier of the task
    int64 id = 2;
}

 /**
  * Contains task data specified by ID in Request
  */
message ReadResponse {
    // API versioning, specify version explicitly
    string api = 1;

    // Task entity returned by ID
    ToDo toDo = 2;
}

  /**
   * Request Data to update task
   */
message UpdateRequest {
    // API versioning, specify version explicitly
    string api = 1;

    // Task entity to be updated
    ToDo toDo = 2;
}

/**
 * Contains status of update opertation
 */
message UpdateResponse {
    // API versioning, specify version explicitly
    string api = 1;

    // Contains number of entites that have been upadted
    // Equals 1 if update was successful
    int64 updated = 2;
}

/**
 * Request data to delete task
 */
message DeleteRequest {
    // API versioning, specify version explicitly
    string api = 1;

    // Unique identifier of the task to be deleted
    int64 id = 2;
}

/**
 * Contains status of delete operation
 */
message DeleteResponse {
    // API versioning, specify version explicitly
    string api = 1;

    // Contains number of entites that have been deleted
    // Equals 1 if delete was successful
    int64 deleted = 2;
}

/**
 * Request Data to read all tasks
 */
message ReadAllRequest {
    // API versioning, specify version explicitly
    string api = 1;
}

/**
 * Contains a list of all tasks
 */
message ReadAllResponse {
    // API versioning, specify version explicitly
    string api = 1;

    // List of all tasks
    repeated ToDo toDos = 2;
}

/**
 * Service to manage list of created tasks
 */
service ToDoService {
    // Create a new task
    rpc Create (CreateRequest) returns (CreateResponse);

    // Read a task
    rpc Read (ReadRequest) returns (ReadResponse);

    // Update a task
    rpc Update (UpdateRequest) returns (UpdateResponse);

    // Delete a task
    rpc Delete (DeleteRequest) returns (DeleteResponse);

    // Read all Tasks
    rpc ReadAll (ReadAllRequest) returns (ReadAllResponse);
}